#!/usr/bin/env bash
# 
# The Cloudata command script
#
# Environment Variables
#
#   JAVA_HOME        The java implementation to use.  Overrides JAVA_HOME.
#
#   CLOUDATA_HEAPSIZE  The maximum amount of heap to use, in MB. 
#                     Default is 2000.
#
#   CLOUDATA_OPTS      Extra Java runtime options.
#
#   CLOUDATA_CONF_DIR  Alternate conf dir. Default is ${CLOUDATA_HOME}/conf.
#
#   CLOUDATA_ROOT_LOGGER The root appender. Default is INFO,console
#

bin=`dirname "$0"`
bin=`cd "$bin"; pwd`

. "$bin"/cloudata-config.sh

# if no args specified, show usage
if [ $# = 0 ]; then
  echo "Usage: cloudata COMMAND"
  echo "where COMMAND is one of:"
  echo "  localcluster      run a all in one server for testing"
  echo "  cloudatamaster    run a cloudata master"
  echo "  commitlogserver   run a commitlogserver"
  echo "  tabletserver      run a tabletserver"
  echo "  restserver        run a RESTful HTTP server"
  echo "  thriftserver      run a thrift server"
  echo "  blobmanager       run a blob manager"
  echo "  balancer          run a balancer"
  echo "  cloudatafs        run a cloudata-fs"
  echo "  shell             run a shell"
  echo "  fshell            run cloudata-fs shell"
  echo "  zshell            run a zookeeper client <hostname:port> <command(help, ls, ...)>"  
  echo "  scan              scan data"
  echo "  zookeeper         run a zookeeper server"
  exit 1
fi

# get arguments
COMMAND=$1
shift

if [ -f "${CLOUDATA_CONF_DIR}/cloudata-env.sh" ]; then
  . "${CLOUDATA_CONF_DIR}/cloudata-env.sh"
fi

# some Java parameters
if [ "$JAVA_HOME" != "" ]; then
  #echo "run java in $JAVA_HOME"
  JAVA_HOME=$JAVA_HOME
fi
  
if [ "$JAVA_HOME" = "" ]; then
  echo "Error: JAVA_HOME is not set."
  exit 1
fi

JAVA=$JAVA_HOME/bin/java

# CLASSPATH initially contains $CLOUDATA_CONF_DIR
CLASSPATH="${CLOUDATA_CONF_DIR}"
CLASSPATH=${CLASSPATH}:"${HADOOP_CONF_DIR}"
CLASSPATH=${CLASSPATH}:$JAVA_HOME/lib/tools.jar

# for developers, add Cloudata classes to CLASSPATH
#if [ -d "$CLOUDATA_HOME/build/classes" ]; then
#  CLASSPATH=${CLASSPATH}:$CLOUDATA_HOME/build/classes
#fi

# so that filenames w/ spaces are handled correctly in loops below
IFS=

for f in $CLOUDATA_HOME/cloudata-*core.jar; do
  CLASSPATH=${CLASSPATH}:$f;
done

# add libs to CLASSPATH
for f in $CLOUDATA_HOME/lib/*.jar; do
  CLASSPATH=${CLASSPATH}:$f;
done

for f in $CLOUDATA_HOME/lib/jetty-ext/*.jar; do
  CLASSPATH=${CLASSPATH}:$f;
done

#add hadoop CLASSPATH
for f in $HADOOP_HOME/hadoop-*.jar; do
  CLASSPATH=${CLASSPATH}:$f;
done

# add libs to CLASSPATH
#for f in $HADOOP_HOME/lib/*.jar; do
#  CLASSPATH=${CLASSPATH}:$f;
#done

#for f in $HADOOP_HOME/lib/jetty-ext/*.jar; do
#  CLASSPATH=${CLASSPATH}:$f;
#done

# add user-specified CLASSPATH last
if [ "$CLOUDATA_CLASSPATH" != "" ]; then
  CLASSPATH=${CLASSPATH}:${CLOUDATA_CLASSPATH}
fi

# default log directory & file
if [ "$CLOUDATA_LOG_DIR" = "" ]; then
  CLOUDATA_LOG_DIR="$CLOUDATA_HOME/logs"
fi
if [ "$CLOUDATA_LOGFILE" = "" ]; then
  CLOUDATA_LOGFILE='cloudata.log'
fi

# restore ordinary behaviour
unset IFS

# figure out which class to run
if [ "$COMMAND" = "cloudatamaster" ] ; then
  CLASS='org.cloudata.core.master.CloudataMaster'
  CLOUDATA_OPTS="$CLOUDATA_OPTS $CLOUDATA_MASTERNODE_OPTS"
elif [ "$COMMAND" = "tabletserver" ] ; then
  CLASS='org.cloudata.core.tabletserver.TabletServer'
  CLOUDATA_OPTS="$CLOUDATA_OPTS $CLOUDATA_TABLETSERVER_OPTS"
elif [ "$COMMAND" = "commitlogserver" ] ; then
  CLASS='org.cloudata.core.commitlog.CommitLogServer'
  CLOUDATA_OPTS="$CLOUDATA_OPTS $CLOUDATA_COMMITLOG_OPTS"
elif [ "$COMMAND" = "thriftserver" ] ; then
  CLASS='org.cloudata.core.thrift.CloudataThriftServer'
elif [ "$COMMAND" = "restserver" ] ; then
  CLASS='org.cloudata.core.rest.RestWebServer'
elif [ "$COMMAND" = "blobmanager" ] ; then
  CLASS='org.cloudata.core.client.blob.BlobManager'
elif [ "$COMMAND" = "balancer" ] ; then
  CLASS='org.cloudata.core.master.TabletBalancer'
elif [ "$COMMAND" = "cloudatafs" ] ; then
  CLASS='org.cloudata.tools.cloudatafs.CloudataFSWebServer'
elif [ "$COMMAND" = "shell" ] ; then
  CLASS='org.cloudata.core.client.Shell'
  CLOUDATA_OPTS="$CLOUDATA_OPTS -Dfile.encoding=EUC-KR"
elif [ "$COMMAND" = "fshell" ] ; then
  CLASS='org.cloudata.tools.cloudatafs.CloudataFSShell'
elif [ "$COMMAND" = "scan" ] ; then
  CLASS='org.cloudata.core.client.scanner.SingleTabletMultiColumnScanner'
elif [ "$COMMAND" = "zookeeper" ] ; then
  CLASS='org.apache.zookeeper.server.quorum.QuorumPeerMain'
elif [ "$COMMAND" = "zshell" ] ; then
  CLASS='org.apache.zookeeper.ZooKeeperMain'
elif [ "$COMMAND" = "jar" ] ; then
  CLASS='org.cloudata.core.common.util.CRunJar'
elif [ "$COMMAND" = "localcluster" ] ; then
  CLASS='org.cloudata.core.AllInOneServer'
else
  CLASS=$COMMAND
fi

CLOUDATA_OPTS="$CLOUDATA_OPTS -Dcloudata.log.dir=$CLOUDATA_LOG_DIR"
CLOUDATA_OPTS="$CLOUDATA_OPTS -Dcloudata.log.file=$CLOUDATA_LOGFILE"
CLOUDATA_OPTS="$CLOUDATA_OPTS -Dcloudata.home.dir=$CLOUDATA_HOME"
CLOUDATA_OPTS="$CLOUDATA_OPTS -Dcloudata.id.str=$CLOUDATA_IDENT_STRING"
CLOUDATA_OPTS="$CLOUDATA_OPTS -Dcloudata.root.logger=${CLOUDATA_ROOT_LOGGER:-INFO,console}"

# run it
exec "$JAVA" $CLOUDATA_OPTS -Djava.security.policy=$CLOUDATA_HOME/conf/policy.all -classpath "$CLASSPATH" $CLASS "$@"

